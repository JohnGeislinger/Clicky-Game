{"ast":null,"code":"import _objectSpread from \"/Users/john/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/john/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/john/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/john/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/john/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/john/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/john/Desktop/Clicky-Game/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport data from \"./llamas.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: data,\n      score: 0,\n      topScore: 0\n    };\n\n    _this.handleCorrectGuess = function (newData) {\n      var _this$state = _this.state,\n          topScore = _this$state.topScore,\n          score = _this$state.score;\n      var newScore = score + 1;\n      var newTopScore = Math.max(newScore, topScore);\n\n      _this.setState({\n        data: _this.shuffleData(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    _this.handleIncorrectGuess = function (data) {\n      _this.setState({\n        data: _this.resetData(data),\n        score: 0\n      });\n    };\n\n    _this.resetData = function (data) {\n      var resetData = data.map(function (item) {\n        return _objectSpread({}, item, {\n          clicked: false\n        });\n      });\n      return _this.shuffleData(resetData);\n    };\n\n    _this.shuffleData = function (data) {\n      var i = data.length - 1;\n\n      while (i > 0) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    _this.handleItemClick = function (id) {\n      var guessedCorrectly = false;\n\n      var newData = _this.state.data.map(function (item) {\n        var newItem = _objectSpread({}, item);\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n\n      guessedCorrectly ? _this.handleCorrectGuess(newData) : _this.handleIncorrectGuess(newData);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.shuffleData(this.state.data)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.data.map(function (item) {\n        return React.createElement(ImageCard, {\n          key: item.id,\n          id: item.id,\n          shake: !_this2.state.score && _this2.state.topScore,\n          handleClick: _this2.handleItemClick,\n          image: item.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/john/Desktop/Clicky-Game/src/App.js"],"names":["React","Component","Header","ImageCard","Wrapper","data","App","state","score","topScore","handleCorrectGuess","newData","newScore","newTopScore","Math","max","setState","shuffleData","handleIncorrectGuess","resetData","map","item","clicked","i","length","j","floor","random","temp","handleItemClick","id","guessedCorrectly","newItem","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport data from \"./llamas.json\";\n\nclass App extends Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleData(this.state.data) });\n  };\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      data: this.shuffleData(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n\n  shuffleData = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if(newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header score={this.state.score} topScore={this.state.topScore} />\n        <Wrapper>\n          {this.state.data.map(item => (\n            <ImageCard \n              key={item.id}\n              id={item.id}\n              shake={!this.state.score && this.state.topScore}\n              handleClick={this.handleItemClick}\n              image={item.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}